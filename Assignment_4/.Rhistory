lines(Days[2:5000],Y[2:5000], type = "l", col = "green")
lines(Days[2:5000],kl_optim$rec[2:5000], type = "l", col = "green")
xx <-
yy <-
#yy <- c(c(0, cumsum(stats::rnorm(n))), rev(c(0, cumsum(stats::rnorm(n)))))
plot   (xx, yy, type = "n", xlab = "Time", ylab = "Distance")
polygon(xx, yy, col = "gray", border = "red")
## Plotting
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[2:5000])
pred <- kl_optim$pred[2:5000]
plot(Days[2:5000],Y[2:5000],type="l",xlab="Days from start",ylab="Salinity [PSU]",main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[2:5000], rev(Days[2:5000])),c(rev(pred - PI), pred +PI), col = "gray", border = NA)
lines(Days[2:5000],Y[2:5000], type = "l", col = "black")
lines(Days[2:5000],kl_optim$rec[2:5000], type = "l", col = "green")
## Plotting
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[849:951])
pred <- kl_optim$pred[849:951]
plot(Days[849:951],Y[849:951],type="l",xlab="Days from start",ylab="Salinity [PSU]",main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[849:951], rev(Days[849:951])),c(rev(pred - PI), pred +PI), col = "gray", border = NA)
lines(Days[849:951],Y[849:951], type = "l", col = "black")
lines(Days[849:951],kl_optim$rec[849:951], type = "l", col = "green")
plot(Days[849:951],Y[849:951],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(pred - PI),max(pred +PI)),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[849:951], rev(Days[849:951])),c(rev(pred - PI), pred +PI), col = "gray", border = NA)
plot(Days[849:951],Y[849:951],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(c(rev(pred - PI), pred +PI),c(rev(pred - PI), pred +PI)),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[849:951], rev(Days[849:951])),c(rev(pred - PI), pred +PI), col = "gray", border = NA)
lines(Days[849:951],Y[849:951], type = "l", col = "black")
lines(Days[849:951],kl_optim$rec[849:951], type = "l", col = "green")
plot(Days[849:951],Y[849:951],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[849:951], rev(Days[849:951])),c(rev(pred - PI), pred +PI), col = "gray", border = NA)
lines(Days[849:951],Y[849:951], type = "l", col = "black")
lines(Days[849:951],kl_optim$rec[849:951], type = "l", col = "green")
qnorm(0.025)
## Plotting
PI <- qnorm(0.25)*sqrt((kl_optim$Sigma.yy.pred[,,])[849:951])
qnorm(0.25)
## Plotting
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.xx.pred[,,])[849:951])
pred <- kl_optim$pred[849:951]
plot(Days[849:951],Y[849:951],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[849:951], rev(Days[849:951])),c(rev(pred - PI), pred +PI), col = "gray", border = NA)
lines(Days[849:951],Y[849:951], type = "l", col = "black")
lines(Days[849:951],kl_optim$rec[849:951], type = "l", col = "green")
# standardized one step prediction errors
pred_errors <- (kl_optim$pred[2:5000] - Y[2:5000])/(sqrt(kl_optim$Sigma.yy.pred[2:5000]))
## Plotting
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[849:951])
pred <- kl_optim$pred[849:951]
plot(Days[849:951],Y[849:951],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[849:951], rev(Days[849:951])),c(rev(pred - PI), pred +PI), col = "gray", border = NA)
lines(Days[849:951],Y[849:951], type = "l", col = "black")
lines(Days[849:951],kl_optim$rec[849:951], type = "l", col = "green")
## Plotting
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[849:951])
pred <- kl_optim$pred[849:951]
plot(Days[849:951],Y[849:951],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[849:951], rev(Days[849:951])),c(rev(pred - PI), pred +PI), col = "gray", border = NA)
lines(Days[849:951],Y[849:951], type = "l", col = "black")
lines(Days[849:951],kl_optim$rec[849:951], type = "l", col = "green")
Sigma1_opt <- 1
Sigma2_opt <- 1
kl_optim <- kalman(Salt,A=A,B=B,u=NULL,C=C,Sigma.1=matrix(Sigma1_opt),Sigma.2=matrix(Sigma2_opt),debug=FALSE,V0=matrix(Sigma1_opt),Xhat0=Salt[1],n.ahead=1,skip=0,verbose=TRUE)
## Plotting
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[849:951])
pred <- kl_optim$pred[849:951]
plot(Days[849:951],Y[849:951],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[849:951], rev(Days[849:951])),c(rev(pred - PI), pred +PI), col = "gray", border = NA)
lines(Days[849:951],Y[849:951], type = "l", col = "black")
## Plotting
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[849:951])
pred <- kl_optim$pred[849:951]
plot(Days[849:951],Y[849:951],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[849:951], rev(Days[849:951])),c(rev(pred + PI), pred - PI), col = "gray", border = NA)
lines(Days[849:951],Y[849:951], type = "l", col = "black")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[849:951], rev(Days[849:951])),c(rev(pred - PI), pred + PI), col = "gray", border = NA)
lines(Days[849:951],Y[849:951], type = "l", col = "black")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[849:951], rev(Days[849:951])),c(pred - PI, rev(pred + PI), col = "gray", border = NA)
lines(Days[849:951],kl_optim$rec[849:951], type = "l", col = "green")
## Plotting
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[849:951])
pred <- kl_optim$pred[849:951]
plot(Days[849:951],Y[849:951],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
lines(Days[849:951],Y[849:951], type = "l", col = "black")
lines(Days[849:951],kl_optim$rec[849:951], type = "l", col = "green")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[849:951], rev(Days[849:951])),c(pred - PI, rev(pred + PI), col = "gray", border = NA)
## Plotting
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[849:951])
pred <- kl_optim$pred[849:951]
plot(Days[849:951],Y[849:951],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
lines(Days[849:951],Y[849:951], type = "l", col = "black")
lines(Days[849:951],kl_optim$rec[849:951], type = "l", col = "green")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[849:951], rev(Days[849:951])),c(pred + PI, rev(pred - PI), col = "gray", border = NA)
## Plotting
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[849:951])
pred <- kl_optim$pred[849:951]
plot(Days[849:951],Y[849:951],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[849:951], rev(Days[849:951])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[849:951],Y[849:951], type = "l", col = "black")
# Assignment 4
##########################
# Q4.1 Loading and Plotting
DATA <- read.csv("A4_Kulhuse.csv")
Salt <- DATA$Sal
OX <- DATA$ODO
# missing observations
sum(is.na(Salt))
sum(is.na(OX))
DATA$DateTime[5000]
# Plotting
Days <- seq(from = 10/24, by = 1/48, length.out = 5000) # Days from start (2017-08-24 10:00:00)
plot(Days,DATA$Sal,type="l",xlab="Days from start",ylab="Salinity [PSU]",main="Water salinity")
plot(Days,DATA$ODO,type="l",xlab="Days from start",ylab="Oxygen [mg/L]",main = "Dissolved Oxygen")
min(na.omit(DATA$ODO))
######################################
# Q4.3 - Kalman Filter
A <- matrix(1)
B <- matrix(c(0))
C <- matrix(1)
Y <- Salt
Xhat0 <- matrix(Salt[1])
V0 <- matrix(0.01)
KALMAN <- kalman_rem_out(Y,A,B=NULL,u=NULL,C,Sigma.1=matrix(0.01),Sigma.2=matrix(0.005),debug=FALSE,V0=V0,Xhat0=Xhat0,n.ahead=1,skip=0,verbose=TRUE)
## Plotting
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[2:5000])
pred <- KALMAN$pred[2:5000]
plot(Days[801:951],Y[801:951],type="l",xlab="Days from start",ylab="Salinity [PSU]",main="Water salinity with kalman filter")
polygon(Days[2:5000],c(rev(2:5000), 2:5000), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
lines(Days[801:951],KALMAN$rec[801:951], type = "l", col = "green")
# standardized one step prediction errors
pred_errors <- (KALMAN$pred[2:5000] - Y[2:5000])/(sqrt(KALMAN$Sigma.yy.pred[2:5000]))
plot(Days[2:5000],pred_errors,type="l",xlab="Days from start",ylab="Prediction error [PSU]",main="Standardized prediction errors")
# Zoomed in
plot(Days[801:951],pred_errors[800:950],xlab="Days from start",ylab="Prediction error [PSU]",main="Standardized prediction errors (Zoomed in)")
#Finale value of filter
KALMAN$rec[5000]
#####################################################
# Number of Outliers
sum(KALMAN$Outliers)
# standardized one step prediction errors
pred_errors <- (KALMAN$pred[2:5000] - Y[2:5000])/(sqrt(KALMAN$Sigma.yy.pred[2:5000]))
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[849:951])
pred <- KALMAN$pred[849:951]
plot(Days[849:951],Y[849:951],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[849:951], rev(Days[849:951])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[849:951],Y[849:951], type = "l", col = "black")
lines(Days[849:951],KALMAN$rec[849:951], type = "l", col = "green")
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[849:951])
pred <- KALMAN$pred[849:951]
plot(Days[850:952],Y[850:952],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[850:952], rev(Days[849:951])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[850:952],Y[850:952], type = "l", col = "black")
lines(Days[850:952],KALMAN$rec[849:951], type = "l", col = "green")
lines(Days[850:952],Y[851:953], type = "l", col = "black")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[850:952], rev(Days[850:952])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[850:952],Y[849:951], type = "l", col = "black")
lines(Days[850:952],KALMAN$rec[849:951], type = "l", col = "green")
Indx <- c(800:950)
Indx
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[Indx])
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[Indx])
pred <- KALMAN$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
polygon(c(Days[Indx], rev(Days[Indx])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],KALMAN$rec[Indx], type = "l", col = "green")
lines(Days[Indx+1],Y[Indx], type = "l", col = "black")
lines(Days[Indx+1],KALMAN$rec[Indx], type = "l", col = "green")
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[Indx])
pred <- KALMAN$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
polygon(c(Days[Indx], rev(Days[Indx])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx+1],Y[Indx], type = "l", col = "black")
lines(Days[Indx+1],KALMAN$rec[Indx], type = "l", col = "green")
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],KALMAN$rec[Indx], type = "l", col = "green")
PI
KALMAN$Sigma.yy.pred
KALMAN$Sigma.yy.pred[,,]
Indx <- c(800:950)
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[Indx])
pred <- KALMAN$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
polygon(c(Days[Indx], rev(Days[Indx])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx+1],Y[Indx], type = "l", col = "black")
lines(Days[Indx+1],KALMAN$rec[Indx], type = "l", col = "green")
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[Indx])
pred <- kl_optim$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[Indx], rev(Days[Indx])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],kl_optim$rec[Indx], type = "l", col = "green")
PI
Sigma.yy.pred
Sigma.yy.pred
KALMAN$Sigma.yy.pred
KALMAN$Sigma.yy.pred[,,]
kl_optim$Sigma.yy.pred[,,]
##############################################
#Q.45
nll <- function(Sigma){ #Sigma[1] og Sigma[2].  Sigma <- array(c(Sigma1,Sigma2),dim=c(1,1,2))
kl <- kalman(Salt[1:800],A=A,B=B,u=NULL,C=C,Sigma.1=matrix(exp(Sigma[1])),Sigma.2=matrix(exp(Sigma[2])),debug=FALSE,V0=matrix(exp(Sigma[1])),Xhat0=Salt[1],n.ahead=1,skip=0,verbose=TRUE)
#using C is single index then
N <- length(Salt[1:800])
R <- na.omit( (c(C)*kl$Sigma.xx.pred[1,1,]*c(C)+c(matrix(exp(Sigma[2]))))[1:N])
Y_tilde <- na.omit(Salt[1:N]-kl$pred[1:N])
1/2*sum(log(R)+Y_tilde*1/R*Y_tilde)
}
Sigma1 <- matrix(c(1)) #System variance
Sigma2 <- matrix(c(1)) #Observation variance
fit <- optim(c(log(Sigma1),log(Sigma2)), nll, method="L-BFGS-B")#,lower=0.005^2) #indsæt lower bound. #method="L-BFGS-B"
fit$convergence
Sigma1_opt <- exp(fit$par[1])
Sigma2_opt <- exp(fit$par[2])
kl_optim <- kalman(Salt,A=A,B=B,u=NULL,C=C,Sigma.1=matrix(Sigma1_opt),Sigma.2=matrix(Sigma2_opt),debug=FALSE,V0=matrix(Sigma1_opt),Xhat0=Salt[1],n.ahead=1,skip=0,verbose=TRUE)
Indx <- c(800:950)
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[Indx])
pred <- kl_optim$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[Indx], rev(Days[Indx])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],kl_optim$rec[Indx], type = "l", col = "green")
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[Indx])
pred <- KALMAN$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
polygon(c(Days[Indx], rev(Days[Indx])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx+1],Y[Indx], type = "l", col = "black")
lines(Days[Indx+1],KALMAN$rec[Indx], type = "l", col = "green")
lines(Days[Indx+1],Y[Indx], type = "l", col = "black")
lines(Days[Indx+1],KALMAN$rec[Indx], type = "l", col = "green")
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[Indx])
pred <- KALMAN$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],KALMAN$rec[Indx], type = "l", col = "green")
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
polygon(c(Days[Indx], rev(Days[Indx])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],KALMAN$rec[Indx], type = "l", col = "green")
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],KALMAN$rec[Indx], type = "l", col = "green")
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[Indx])
pred <- KALMAN$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],KALMAN$rec[Indx], type = "l", col = "green")
KALMAN$Sigma.yy.pred
KALMAN$Sigma.yy.pred[,,]
polygon(c(Days[Indx], rev(Days[Indx])),c(pred, rev(pred)), col = "gray", border = NA) #HAR sat -1
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
polygon(c(Days[Indx], rev(Days[Indx])),c(pred, rev(pred)), col = "gray", border = NA) #HAR sat -1
polygon(c(Days[Indx], rev(Days[Indx])),c(pred, rev(pred)), col = "red",lwd=3, border = NA) #HAR sat -1
polygon(c(Days[Indx], rev(Days[Indx])),c(pred, rev(pred+1)), col = "red",lwd=3, border = NA) #HAR sat -1
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred, rev(pred+1)), col = "red",lwd=3, border = NA) #HAR sat -1
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred, rev(pred+1)), col = "red",lwd=3, border = NA) #HAR sat -1
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred-1, rev(pred)), col = "red",lwd=3, border = NA) #HAR sat -1
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[Indx])
pred <- KALMAN$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred-1, rev(pred)), col = "red",lwd=3, border = NA) #HAR sat -1
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[Indx])
pred <- KALMAN$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA) #HAR sat -1 på day index, det virker...
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],KALMAN$rec[Indx], type = "l", col = "green")
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[Indx])
pred <- kl_optim$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],kl_optim$rec[Indx], type = "l", col = "green")
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],kl_optim$rec[Indx], type = "l", col = "green")
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[Indx])
pred <- KALMAN$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA) #HAR sat -1 på day index, det virker...
lines(Days[Indx],Y[Indx], type = "l", col = "black")
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[Indx])
pred <- KALMAN$pred[Indx]
pred
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA) #HAR sat -1 på day index, det virker...
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],KALMAN$rec[Indx], type = "l", col = "green")
Indx <- c(800:950)
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[Indx])
pred <- kl_optim$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
pred
Indx <- c(816:817)
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[Indx])
pred <- kl_optim$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
Indx <- c(815:817)
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[Indx])
pred <- kl_optim$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
Indx <- c(814:817)
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[Indx])
pred <- kl_optim$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
Indx <- c(813:817)
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[Indx])
pred <- kl_optim$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],kl_optim$rec[Indx], type = "l", col = "green")
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[Indx])
pred <- KALMAN$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA) #HAR sat -1 på day index, det virker...
Indx <- c(800:950)
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[Indx])
pred <- kl_optim$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],kl_optim$rec[Indx], type = "l", col = "green")
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[Indx])
pred <- KALMAN$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA) #HAR sat -1 på day index, det virker...
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],KALMAN$rec[Indx], type = "l", col = "green")
Indx <- c(800:950)
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[Indx])
pred <- kl_optim$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],kl_optim$rec[Indx], type = "l", col = "green")
kl_optim$rec[5000]
kl_optim$Sigma.xx.rec[,,][5000]
kl_optim$rec[5000]
kl_optim$pred[,,][5000]
kl_optim$K[,,][5000]
kl_optim$pred[,,][5000]
kl_optim$pred[,,][5000]
kl_optim$pred[5000]
kl_optim$rec[5000]
kl_optim$pred[5000]
kl_optim$K[,,][5000]
kl_optim$Sigma.xx.rec[,,][5000]
kl_optim$Sigma.yy.rec[,,][5000]
kl_optim$Sigma.xx.pred[,,][5000]
kl_optim$Sigma.yy.pred[,,][5000]
kl_optim$rec[5000]
kl_optim$pred[5000]
kl_optim$K[,,][5000]
kl_optim$Sigma.xx.rec[,,][5000]
kl_optim$Sigma.yy.rec[,,][5000]
kl_optim$Sigma.xx.pred[,,][5000]
kl_optim$Sigma.yy.pred[,,][5000]
Y[5000]
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[Indx])
pred <- KALMAN$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],KALMAN$rec[Indx], type = "l", col = "green")
# DER ER ET
PI <- qnorm(0.025)*sqrt((KALMAN$Sigma.yy.pred[,,])[Indx])
pred <- KALMAN$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],KALMAN$rec[Indx], type = "l", col = "green")
Indx <- c(800:950)
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[Indx])
pred <- kl_optim$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],kl_optim$rec[Indx], type = "l", col = "green")
kl_optim <- kalman_rem_out(Salt,A=A,B=B,u=NULL,C=C,Sigma.1=matrix(Sigma1_opt),Sigma.2=matrix(Sigma2_opt),debug=FALSE,V0=matrix(Sigma1_opt),Xhat0=Salt[1],n.ahead=1,skip=0,verbose=TRUE)
Indx <- c(800:950)
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[Indx])
pred <- kl_optim$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],kl_optim$rec[Indx], type = "l", col = "green")
##############################################
#Q.45
nll <- function(Sigma){ #Sigma[1] og Sigma[2].  Sigma <- array(c(Sigma1,Sigma2),dim=c(1,1,2))
kl <- kalman_rem_out(Salt[1:800],A=A,B=B,u=NULL,C=C,Sigma.1=matrix(exp(Sigma[1])),Sigma.2=matrix(exp(Sigma[2])),debug=FALSE,V0=matrix(exp(Sigma[1])),Xhat0=Salt[1],n.ahead=1,skip=0,verbose=TRUE)
#using C is single index then
N <- length(Salt[1:800])
R <- na.omit( (c(C)*kl$Sigma.xx.pred[1,1,]*c(C)+c(matrix(exp(Sigma[2]))))[1:N])
Y_tilde <- na.omit(Salt[1:N]-kl$pred[1:N])
1/2*sum(log(R)+Y_tilde*1/R*Y_tilde)
}
Sigma1 <- matrix(c(1)) #System variance
Sigma2 <- matrix(c(1)) #Observation variance
fit <- optim(c(log(Sigma1),log(Sigma2)), nll, method="L-BFGS-B")#,lower=0.005^2) #indsæt lower bound. #method="L-BFGS-B"
fit$convergence
Sigma1_opt <- exp(fit$par[1])
Sigma2_opt <- exp(fit$par[2])
kl_optim <- kalman_rem_out(Salt,A=A,B=B,u=NULL,C=C,Sigma.1=matrix(Sigma1_opt),Sigma.2=matrix(Sigma2_opt),debug=FALSE,V0=matrix(Sigma1_opt),Xhat0=Salt[1],n.ahead=1,skip=0,verbose=TRUE)
Indx <- c(800:950)
## Plotting KALMAN
PI <- qnorm(0.025)*sqrt((kl_optim$Sigma.yy.pred[,,])[Indx])
pred <- kl_optim$pred[Indx]
plot(Days[Indx],Y[Indx],type="l",xlab="Days from start",ylab="Salinity [PSU]",ylim=c(min(c(rev(pred - PI), pred +PI)),max(c(rev(pred - PI), pred +PI))),main="Water salinity with Kalman filter optimal parameters")
#polygon(Days[2:50],c(rev(2:50), 2:50), c(rev(pred - PI), pred +PI), col = "grey", border = NA)
polygon(c(Days[Indx-1], rev(Days[Indx-1])),c(pred + PI, rev(pred - PI)), col = "gray", border = NA)
lines(Days[Indx],Y[Indx], type = "l", col = "black")
lines(Days[Indx],kl_optim$rec[Indx], type = "l", col = "green")
kl_optim$rec[5000]
kl_optim$pred[5000]
kl_optim$K[,,][5000]
kl_optim$Sigma.xx.rec[,,][5000]
kl_optim$Sigma.yy.rec[,,][5000]
kl_optim$Sigma.xx.pred[,,][5000]
Sigma1_opt
Sigma2_opt
##############################################
#Q.45
nll <- function(Sigma){ #Sigma[1] og Sigma[2].  Sigma <- array(c(Sigma1,Sigma2),dim=c(1,1,2))
kl <- kalman(Salt[1:800],A=A,B=B,u=NULL,C=C,Sigma.1=matrix(exp(Sigma[1])),Sigma.2=matrix(exp(Sigma[2])),debug=FALSE,V0=matrix(exp(Sigma[1])),Xhat0=Salt[1],n.ahead=1,skip=0,verbose=TRUE)
#using C is single index then
N <- length(Salt[1:800])
R <- na.omit( (c(C)*kl$Sigma.xx.pred[1,1,]*c(C)+c(matrix(exp(Sigma[2]))))[1:N])
Y_tilde <- na.omit(Salt[1:N]-kl$pred[1:N])
1/2*sum(log(R)+Y_tilde*1/R*Y_tilde)
}
Sigma1 <- matrix(c(1)) #System variance
Sigma2 <- matrix(c(1)) #Observation variance
fit <- optim(c(log(Sigma1),log(Sigma2)), nll, method="L-BFGS-B")#,lower=0.005^2) #indsæt lower bound. #method="L-BFGS-B"
fit$convergence
Sigma1_opt <- exp(fit$par[1])
Sigma2_opt <- exp(fit$par[2])
Sigma1_opt
Sigma2_opt
Sigma1_opt
[1] 0.001886699
